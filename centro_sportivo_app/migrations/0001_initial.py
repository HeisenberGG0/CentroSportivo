# Generated by Django 5.2.1 on 2025-05-25 16:53

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=15, unique=True)),
                ('nome', models.CharField(max_length=20)),
                ('cognome', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('telefono', models.CharField(blank=True, max_length=15)),
                ('password', models.CharField(max_length=128)),
                ('is_active', models.BooleanField(default=True)),
                ('codice_fiscale', models.CharField(blank=True, max_length=16, validators=[django.core.validators.RegexValidator('^[A-Z0-9]{16}$', 'Inserisci un codice fiscale valido')])),
                ('data_registrazione', models.DateTimeField(auto_now_add=True)),
                ('ultimo_accesso', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Cliente',
                'verbose_name_plural': 'Clienti',
            },
        ),
        migrations.CreateModel(
            name='Evento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200)),
                ('descrizione', models.TextField()),
                ('data_ora_inizio', models.DateTimeField()),
                ('data_ora_fine', models.DateTimeField()),
                ('posti_disponibili', models.PositiveIntegerField()),
                ('costo_iscrizione', models.DecimalField(decimal_places=2, default=0.0, max_digits=6)),
                ('data_creazione', models.DateTimeField(auto_now_add=True)),
                ('data_modifica', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Evento',
                'verbose_name_plural': 'Eventi',
                'ordering': ['data_ora_inizio'],
            },
        ),
        migrations.CreateModel(
            name='Impianto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('tipologia', models.CharField(choices=[('calcio', 'Campo da Calcio'), ('tennis', 'Campo da Tennis'), ('padel', 'Campo da Padel'), ('basket', 'Campo da Basket'), ('pallavolo', 'Campo da Pallavolo')], max_length=20)),
                ('capacita_massima', models.PositiveIntegerField()),
                ('stato', models.CharField(choices=[('disponibile', 'Disponibile'), ('prenotato', 'Prenotato'), ('manutenzione', 'In Manutenzione'), ('fuori_servizio', 'Fuori Servizio')], default='disponibile', max_length=20)),
                ('tariffa_oraria', models.DecimalField(decimal_places=2, max_digits=6)),
            ],
            options={
                'verbose_name': 'Impianto',
                'verbose_name_plural': 'Impianti',
            },
        ),
        migrations.CreateModel(
            name='Personale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=150, unique=True)),
                ('nome', models.CharField(max_length=30)),
                ('cognome', models.CharField(max_length=30)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('telefono', models.CharField(blank=True, max_length=15)),
                ('password', models.CharField(max_length=128)),
                ('is_active', models.BooleanField(default=True)),
                ('ruolo', models.CharField(choices=[('responsabile_prenotazioni', 'Responsabile Prenotazioni'), ('manutenzione', 'Manutenzione'), ('istruttore', 'Istruttore'), ('manager', 'Manager'), ('receptionist', 'Receptionist')], max_length=30)),
                ('orario_servizio', models.CharField(help_text='Es: Lun-Ven 9:00-17:00', max_length=100)),
                ('ambito_competenza', models.CharField(help_text='Es: Campi da tennis, Manutenzione generale', max_length=200)),
                ('data_assunzione', models.DateTimeField(auto_now_add=True)),
                ('ultimo_accesso', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Personale',
                'verbose_name_plural': 'Personale',
            },
        ),
        migrations.CreateModel(
            name='GestioneImpianto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_assegnazione', models.DateField(auto_now_add=True)),
                ('note', models.TextField(blank=True, help_text="Note sulla gestione dell'impianto")),
                ('impianto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='centro_sportivo_app.impianto')),
                ('personale', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='centro_sportivo_app.personale')),
            ],
            options={
                'verbose_name': 'Gestione Impianto',
                'verbose_name_plural': 'Gestioni Impianti',
                'unique_together': {('personale', 'impianto')},
            },
        ),
        migrations.CreateModel(
            name='Partecipazione',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_iscrizione', models.DateTimeField(auto_now_add=True)),
                ('presente', models.BooleanField(default=False, help_text="Segna se il cliente si Ã¨ presentato all'evento")),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='centro_sportivo_app.cliente')),
                ('evento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='centro_sportivo_app.evento')),
            ],
            options={
                'verbose_name': 'Partecipazione',
                'verbose_name_plural': 'Partecipazioni',
                'unique_together': {('cliente', 'evento')},
            },
        ),
        migrations.AddField(
            model_name='evento',
            name='partecipanti',
            field=models.ManyToManyField(blank=True, through='centro_sportivo_app.Partecipazione', to='centro_sportivo_app.cliente'),
        ),
        migrations.AddField(
            model_name='impianto',
            name='personale_assegnato',
            field=models.ManyToManyField(blank=True, through='centro_sportivo_app.GestioneImpianto', to='centro_sportivo_app.personale'),
        ),
        migrations.AddField(
            model_name='evento',
            name='organizzatore',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='eventi_organizzati', to='centro_sportivo_app.personale', verbose_name='Organizzatore'),
        ),
        migrations.CreateModel(
            name='UtilizzoImpiantoEvento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('evento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='centro_sportivo_app.evento')),
                ('impianto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='centro_sportivo_app.impianto')),
            ],
            options={
                'verbose_name': 'Utilizzo Impianto per Evento',
                'verbose_name_plural': 'Utilizzi Impianti per Eventi',
                'unique_together': {('evento', 'impianto')},
            },
        ),
        migrations.AddField(
            model_name='evento',
            name='impianti_utilizzati',
            field=models.ManyToManyField(through='centro_sportivo_app.UtilizzoImpiantoEvento', to='centro_sportivo_app.impianto'),
        ),
        migrations.CreateModel(
            name='Prenotazione',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateField()),
                ('ora_inizio', models.TimeField()),
                ('ora_fine', models.TimeField()),
                ('stato', models.CharField(choices=[('richiesta', 'Richiesta'), ('confermata', 'Confermata'), ('annullata', 'Annullata'), ('completata', 'Completata')], default='richiesta', max_length=15)),
                ('importo_totale', models.DecimalField(decimal_places=2, max_digits=8)),
                ('pagamento_effettuato', models.BooleanField(default=False)),
                ('data_creazione', models.DateTimeField(auto_now_add=True)),
                ('data_modifica', models.DateTimeField(auto_now=True)),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='centro_sportivo_app.cliente')),
                ('gestita_da', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='prenotazioni_gestite', to='centro_sportivo_app.personale')),
                ('impianto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='centro_sportivo_app.impianto')),
            ],
            options={
                'verbose_name': 'Prenotazione',
                'verbose_name_plural': 'Prenotazioni',
                'unique_together': {('impianto', 'data', 'ora_inizio')},
            },
        ),
    ]
